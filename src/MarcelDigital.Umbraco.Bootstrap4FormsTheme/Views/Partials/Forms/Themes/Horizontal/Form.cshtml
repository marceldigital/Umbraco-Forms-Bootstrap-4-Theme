@inherits WebViewPage<FormViewModel>
@using Umbraco.Forms.Core
@using Umbraco.Forms.Mvc
@using Umbraco.Forms.Mvc.Models
@using Umbraco.Forms.Mvc.BusinessLogic

@*Set a default class on all fields - needed by bootstrap*@
@Html.SetFormFieldClass("form-control")

@* Wrap all fields in a form-group - needed by bootstrap to correctly display fields horizontally*@
@Html.SetFormFieldWrapperClass("form-group")


<div class="umbraco-forms-page form-horizontal">

    @if (string.IsNullOrEmpty(Model.CurrentPage.Caption) == false)
    {
        <h4 class="umbraco-forms-caption">@Model.CurrentPage.Caption</h4>
    }
                
    @if (Model.ShowValidationSummary)
    {
        @Html.ValidationSummary(false)
    }

    @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
    {

    <fieldset class="umbraco-forms-fieldset" id="@fs.Id">

        @if (string.IsNullOrEmpty(fs.Caption) == false)
        {
            <legend>@fs.Caption</legend>
        }

        <div class="form-row">

            @foreach (var c in fs.Containers)
            {
                <div class="umbraco-forms-container @("col-md-" + c.Width)">

                    @foreach (FieldViewModel f in c.Fields)
                    {
                        bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;

                        <div class="@Html.GetFormFieldWrapperClass(f.FieldTypeName) @f.CssClass row" @{ if (hidden) { <text> style="display: none" </text>  } }>

                            @if (!f.HideLabel)
                            {
                                <label for="@f.Id" class="umbraco-forms-label col-sm-2 col-form-label">
                                    @f.Caption 
                                    @if (f.ShowIndicator)
                                    {
                                        <span class="umbracoForms-Indicator">@Model.Indicator</span>
                                    }
                                </label>
                            }

                            <div class="umbraco-forms-field-wrapper col-sm-10">

                                @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)

                                @if (Model.ShowFieldValidaton)
                                {
                                    @Html.ValidationMessage(f.Id, new { @class = "invalid-feedback" })
                                }

                                @if (!string.IsNullOrEmpty(f.ToolTip))
                                {
                                    <small class="form-text text-muted">@f.ToolTip</small>
                                }
                            </div>


                        </div>
                    }

                </div>

            }
        </div>

    </fieldset>

    }


    <div style="display: none">
        <input type="text" name="@Model.FormId.ToString().Replace("-", "")" />
    </div>

		
    <div class="umbraco-forms-navigation form-row">
		
        <div class="col-sm-10 offset-sm-2">
            @if (Model.IsMultiPage)
            {
                if (!Model.IsFirstPage)
                {
                    <input class="btn prev cancel" type="submit" value="@Model.PreviousCaption" name="__prev"/>
                }
                if (!Model.IsLastPage)
                {
                    <input type="submit" class="btn next" value="@Model.NextCaption" name="next"/>
                }
                if (Model.IsLastPage)
                {
                    <input type="submit" class="btn primary" value="@Model.SubmitCaption" name="submitbtn"/>
                }
            }
            else
            {
                <input type="submit" class="btn btn-outline-primary" value="@Model.SubmitCaption" name="submitbtn"/>
            }
        </div>


    </div>

</div>